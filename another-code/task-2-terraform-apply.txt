mrliberty@admin-vm:~/work/homework/hw-02$ terraform apply
data.yandex_compute_image.ubuntu: Reading...
yandex_vpc_network.develop: Refreshing state... [id=enp382n7duporu92kprk]
data.yandex_compute_image.ubuntu: Read complete after 0s [id=fd865v46cboopthn7u0k]
yandex_vpc_subnet.develop: Refreshing state... [id=e9blsvo7i97k2d3epiqs]
yandex_vpc_subnet.develop-db: Refreshing state... [id=e2l07nkp6pia8979q459]
yandex_compute_instance.platform: Refreshing state... [id=fhmm0basjlahd4b49t9q]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # yandex_compute_instance.vm-db will be created
  + resource "yandex_compute_instance" "vm-db" {
      + created_at                = (known after apply)
      + folder_id                 = (known after apply)
      + fqdn                      = (known after apply)
      + gpu_cluster_id            = (known after apply)
      + hardware_generation       = (known after apply)
      + hostname                  = "netology-develop-platform-db"
      + id                        = (known after apply)
      + maintenance_grace_period  = (known after apply)
      + maintenance_policy        = (known after apply)
      + metadata                  = {
          + "serial-port-enable" = "1"
          + "ssh-keys"           = "ubuntu:ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAkE9oVEOZnsU7+o+s9qRpOtBt/948c0+wnAViGAAZCc mrliberty@admin-vm"
        }
      + name                      = "netology-develop-platform-db"
      + network_acceleration_type = "standard"
      + platform_id               = "standard-v3"
      + service_account_id        = (known after apply)
      + status                    = (known after apply)
      + zone                      = "ru-central1-b"

      + boot_disk {
          + auto_delete = true
          + device_name = (known after apply)
          + disk_id     = (known after apply)
          + mode        = (known after apply)

          + initialize_params {
              + block_size  = (known after apply)
              + description = (known after apply)
              + image_id    = "fd865v46cboopthn7u0k"
              + name        = (known after apply)
              + size        = (known after apply)
              + snapshot_id = (known after apply)
              + type        = "network-hdd"
            }
        }

      + metadata_options (known after apply)

      + network_interface {
          + index              = (known after apply)
          + ip_address         = (known after apply)
          + ipv4               = true
          + ipv6               = (known after apply)
          + ipv6_address       = (known after apply)
          + mac_address        = (known after apply)
          + nat                = true
          + nat_ip_address     = (known after apply)
          + nat_ip_version     = (known after apply)
          + security_group_ids = (known after apply)
          + subnet_id          = "e2l07nkp6pia8979q459"
        }

      + placement_policy (known after apply)

      + resources {
          + core_fraction = 20
          + cores         = 2
          + memory        = 2
        }

      + scheduling_policy {
          + preemptible = true
        }
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

yandex_compute_instance.vm-db: Creating...
yandex_compute_instance.vm-db: Still creating... [10s elapsed]
yandex_compute_instance.vm-db: Still creating... [20s elapsed]
yandex_compute_instance.vm-db: Still creating... [30s elapsed]
yandex_compute_instance.vm-db: Still creating... [40s elapsed]
yandex_compute_instance.vm-db: Creation complete after 50s [id=epdmee07dev5bhn4g80o]

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.